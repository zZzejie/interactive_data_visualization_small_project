{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"height\": \"90vh\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"myScatterPlot\",\n  style: {\n    \"height\": \"inherit\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3);\n}","map":{"version":3,"names":["style","_createElementVNode","id","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3"],"sources":["/Users/zoe/Desktop/example-project/hello-world/src/components/ScatterPlot.vue"],"sourcesContent":["<template>\n  <div style=\"height: 90vh\">\n    <div id='myScatterPlot' style=\"height: inherit\">\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport Plotly from 'plotly.js/dist/plotly';\nexport default {\n  name: \"ScatterPlot\",\n  data: () => ({\n  }),\n  mounted() {\n    this.drawScatterPlot()\n  },\n  methods: {\n    drawScatterPlot() {\n      var trace1 = {\n        x: [1, 2, 3, 4],\n        y: [10, 15, 13, 17],\n        mode: 'markers',\n        type: 'scatter'\n      };\n      var trace2 = {\n        x: [2, 3, 4, 5],\n        y: [16, 5, 11, 9],\n        mode: 'lines',\n        type: 'scatter'\n      };\n      var trace3 = {\n        x: [1, 2, 3, 4],\n        y: [12, 9, 15, 12],\n        mode: 'lines+markers',\n        type: 'scatter'\n      };\n      var data = [trace1, trace2, trace3];\n      Plotly.newPlot('myScatterPlot', data);\n    }\n  }\n}\n</script>\n\n\n\n<style scoped>\n\n</style>"],"mappings":";;EACOA,KAAoB,EAApB;IAAA;EAAA;AAAoB;gCACvBC,mBAAA,CACM;EADDC,EAAE,EAAC,eAAe;EAACF,KAAuB,EAAvB;IAAA;EAAA;;oBAAxBG,UACM,C;;uBAFRC,mBAAA,CAGM,OAHNC,UAGM,EAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}